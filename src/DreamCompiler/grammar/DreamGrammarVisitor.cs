//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Andrey\Desktop\DReAM\src\\DReAMCompiler\grammar\DReAMGrammar.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace DReAMCompiler.Grammar {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DReAMGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IDReAMGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompileUnit([NotNull] DReAMGrammarParser.CompileUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.classifications"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassifications([NotNull] DReAMGrammarParser.ClassificationsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] DReAMGrammarParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.endLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEndLine([NotNull] DReAMGrammarParser.EndLineContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.semiColon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSemiColon([NotNull] DReAMGrammarParser.SemiColonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] DReAMGrammarParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] DReAMGrammarParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] DReAMGrammarParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.funcName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncName([NotNull] DReAMGrammarParser.FuncNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.returnValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnValue([NotNull] DReAMGrammarParser.ReturnValueContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.leftParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeftParen([NotNull] DReAMGrammarParser.LeftParenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.rightParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRightParen([NotNull] DReAMGrammarParser.RightParenContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanExpression([NotNull] DReAMGrammarParser.BooleanExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.primitives"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitives([NotNull] DReAMGrammarParser.PrimitivesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] DReAMGrammarParser.CommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeDecl([NotNull] DReAMGrammarParser.UserDefinedTypeDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeKeyWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeKeyWord([NotNull] DReAMGrammarParser.UserDefinedTypeKeyWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeName([NotNull] DReAMGrammarParser.UserDefinedTypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] DReAMGrammarParser.VariableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] DReAMGrammarParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeVariableDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeVariableDecl([NotNull] DReAMGrammarParser.UserDefinedTypeVariableDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeVariableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeVariableReference([NotNull] DReAMGrammarParser.UserDefinedTypeVariableReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeFunctionReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeFunctionReference([NotNull] DReAMGrammarParser.UserDefinedTypeFunctionReferenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdd([NotNull] DReAMGrammarParser.AddContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.summation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSummation([NotNull] DReAMGrammarParser.SummationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.subtract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubtract([NotNull] DReAMGrammarParser.SubtractContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.subtraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSubtraction([NotNull] DReAMGrammarParser.SubtractionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.multiply"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiply([NotNull] DReAMGrammarParser.MultiplyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.multiplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplication([NotNull] DReAMGrammarParser.MultiplicationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.breakKeyWord"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakKeyWord([NotNull] DReAMGrammarParser.BreakKeyWordContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.divide"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivide([NotNull] DReAMGrammarParser.DivideContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.division"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDivision([NotNull] DReAMGrammarParser.DivisionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.modulo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModulo([NotNull] DReAMGrammarParser.ModuloContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.moduli"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuli([NotNull] DReAMGrammarParser.ModuliContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.types"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypes([NotNull] DReAMGrammarParser.TypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.primitiveTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveTypes([NotNull] DReAMGrammarParser.PrimitiveTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.numericTypes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericTypes([NotNull] DReAMGrammarParser.NumericTypesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.equalsign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualsign([NotNull] DReAMGrammarParser.EqualsignContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperator([NotNull] DReAMGrammarParser.ComparisonOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] DReAMGrammarParser.UnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitWiseOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitWiseOperators([NotNull] DReAMGrammarParser.BitWiseOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.equalequal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualequal([NotNull] DReAMGrammarParser.EqualequalContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.lessthan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessthan([NotNull] DReAMGrammarParser.LessthanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.greaterthan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterthan([NotNull] DReAMGrammarParser.GreaterthanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.lessthanorequalto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessthanorequalto([NotNull] DReAMGrammarParser.LessthanorequaltoContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.greaterthanorequalto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGreaterthanorequalto([NotNull] DReAMGrammarParser.GreaterthanorequaltoContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.booleanAndOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanAndOperator([NotNull] DReAMGrammarParser.BooleanAndOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.booleanOrOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanOrOperator([NotNull] DReAMGrammarParser.BooleanOrOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.notOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotOperator([NotNull] DReAMGrammarParser.NotOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitAnd([NotNull] DReAMGrammarParser.BitAndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitOr([NotNull] DReAMGrammarParser.BitOrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitXor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitXor([NotNull] DReAMGrammarParser.BitXorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitNot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitNot([NotNull] DReAMGrammarParser.BitNotContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitLeftShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitLeftShift([NotNull] DReAMGrammarParser.BitLeftShiftContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.bitRigthShift"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitRigthShift([NotNull] DReAMGrammarParser.BitRigthShiftContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.keywords"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeywords([NotNull] DReAMGrammarParser.KeywordsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.ifExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExpr([NotNull] DReAMGrammarParser.IfExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.whileExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileExpression([NotNull] DReAMGrammarParser.WhileExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.doWhileExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileExpr([NotNull] DReAMGrammarParser.DoWhileExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.userDefinedTypeResolutionOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUserDefinedTypeResolutionOperator([NotNull] DReAMGrammarParser.UserDefinedTypeResolutionOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSequence([NotNull] DReAMGrammarParser.ExpressionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.identifierName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierName([NotNull] DReAMGrammarParser.IdentifierNameContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpression([NotNull] DReAMGrammarParser.TernaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreIncrementExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreIncrementExpression([NotNull] DReAMGrammarParser.PreIncrementExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInExpression([NotNull] DReAMGrammarParser.InExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] DReAMGrammarParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PreDecreaseExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreDecreaseExpression([NotNull] DReAMGrammarParser.PreDecreaseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] DReAMGrammarParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ThisExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitThisExpression([NotNull] DReAMGrammarParser.ThisExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryMinusExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpression([NotNull] DReAMGrammarParser.UnaryMinusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryExpression([NotNull] DReAMGrammarParser.BinaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TypeofExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeofExpression([NotNull] DReAMGrammarParser.TypeofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>InstanceofExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInstanceofExpression([NotNull] DReAMGrammarParser.InstanceofExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryPlusExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryPlusExpression([NotNull] DReAMGrammarParser.UnaryPlusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DeleteExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeleteExpression([NotNull] DReAMGrammarParser.DeleteExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>EqualityExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] DReAMGrammarParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitShiftExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitShiftExpression([NotNull] DReAMGrammarParser.BitShiftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] DReAMGrammarParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitNotExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitNotExpression([NotNull] DReAMGrammarParser.BitNotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableDeclarationExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationExpression([NotNull] DReAMGrammarParser.VariableDeclarationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] DReAMGrammarParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemberDotExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberDotExpression([NotNull] DReAMGrammarParser.MemberDotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariableExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableExpression([NotNull] DReAMGrammarParser.VariableExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MemberIndexExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberIndexExpression([NotNull] DReAMGrammarParser.MemberIndexExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BitAndExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitAndExpression([NotNull] DReAMGrammarParser.BitAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentOperatorExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperatorExpression([NotNull] DReAMGrammarParser.AssignmentOperatorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VoidExpression</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVoidExpression([NotNull] DReAMGrammarParser.VoidExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Evaluatable</c>
	/// labeled alternative in <see cref="DReAMGrammarParser.evaluatableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEvaluatable([NotNull] DReAMGrammarParser.EvaluatableContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] DReAMGrammarParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.reassignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReassignmentExpression([NotNull] DReAMGrammarParser.ReassignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.assignmentOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperator([NotNull] DReAMGrammarParser.AssignmentOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="DReAMGrammarParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] DReAMGrammarParser.LiteralContext context);
}
} // namespace DReAMCompiler.Grammar
